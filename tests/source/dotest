#!/bin/bash

ret=0

testit() {
	if [ -s $1 ] ; then
		echo FAIL: $1
		cat $1
		rm -f $1
		ret=1
		return
	fi
	rm -f $1
	echo PASS: $1
}

prune=(
	'(' -type d -a
		'('
			-name CVS -o
			-name tests -o
			-name autotools -o
			-name autom4te.cache -o
			-name '*~'
		')'
	-prune ')'
)
all_files=(
	"${prune[@]}" -o -type f
)
src_files=(
	"${prune[@]}" -o -type f '(' -name '*.[ch]' -a '!' -name 'config.h' ')'
)



#
# check for misc common typos
#
find ../.. "${all_files[@]}" -print0 | xargs -0 \
	grep -n -I \
		-e '\<compatability\>' \
		-e '\<compatable\>' \
		-e '\<fordeground\>' \
		-e '\<depency\>' \
		-e '\<defalt\>' \
		-e '\<remaing\>' \
		-e '\<queuing\>' \
		-e '\<detatch\>' \
		-e '\<sempahore\>' \
		-e '\<reprenstative\>' \
		-e '\<overriden\>' \
		-e '\<readed\>' \
		-e '\<formated\>' \
		-e '\<algorithic\>' \
		-e '\<deamon\>' \
		-e '\<derefernce\>' \
		-e '\<lenght\>' \
		| sed -e "s:^\.\./\.\./::g" > src.typos
testit src.typos



#
# don't allow obsolete functions
#
find ../.. "${src_files[@]}" -print0 | xargs -0 \
	grep -n -E -e '\<(bcmp|bcopy|bzero|getwd|index|mktemp|rindex|utimes)\>[[:space:]]*\(' \
	| sed -e "s:^\.\./\.\./::g" > src.obsolete.funcs
testit src.obsolete.funcs



#
# make sure people use our constants
#
find ../.. "${src_files[@]}" -print0 | xargs -0 \
	grep -n -E -e '\<PATH_MAX\>' | grep -v _Q_PATH_MAX \
	| sed -e "s:^\.\./\.\./::g" > src.bad.constants
testit src.bad.constants



#
# don't allow obsolete headers
#
find ../.. "${src_files[@]}" -print0 | xargs -0 \
	grep -n -E -e '\<(malloc|memory|sys/(errno|fcntl|signal|stropts|termios|unistd))\.h\>' \
	| sed -e "s:^\.\./\.\./::g" > src.obsolete.headers
testit src.obsolete.headers



#
# make sure people use the x* helper funcs
#
find ../.. "${src_files[@]}" -print0 | xargs -0 \
	grep -n -E -e '\<(malloc|strdup)[[:space:]]*\(' \
	| grep -v libq/x \
	| sed -e "s:^\.\./\.\./::g" > src.use.xfuncs
testit src.use.xfuncs


#
# check for style
#
find ../.. "${src_files[@]}" -print0 | xargs -0 \
	grep -n -E \
		-e '\<(for|if|switch|while)\(' \
		-e '\<(for|if|switch|while) \( ' \
		-e ' ;' \
		-e '[[:space:]]$' \
		-e '\){' \
		-e '(^|[^:])//' \
	| sed -e "s:^\.\./\.\./::g" > src.style
testit src.style


#
# Auto clean up the space issues
#
for x in $(find ../.. "${src_files[@]}" -print); do
	./space "$x" > "$x~"
	if ! diff -u "$x" "$x~" ; then
		echo "New file: $x~"
	else
		rm -f "$x~"
	fi
done > src.space
testit src.space

exit ${ret}
